/// <reference types="node" />
import type { Tensor, Tensor3D, Tensor4D } from '@tensorflow/tfjs-core';
import type { TFN } from '../../../shared/src/types';
import { CheckValidEnvironment, GetImageAsTensor, TensorAsBase64 } from '../shared/types';
export declare const getInvalidTensorError: (input: Tensor) => Error;
export declare const getInvalidInput: (input: unknown) => Error;
export declare const getInvalidImageSrcInput: (input: string) => Error;
export declare const getInvalidChannelsOfTensor: (input: Tensor) => Error;
export type Input = Tensor3D | Tensor4D | string | Uint8Array | Buffer;
export declare const getImageAsTensor: GetImageAsTensor<TFN, Input>;
export declare const tensorAsBase64: TensorAsBase64<TFN>;
export declare const checkValidEnvironment: CheckValidEnvironment<Input>;
//# sourceMappingURL=image.node.d.ts.map