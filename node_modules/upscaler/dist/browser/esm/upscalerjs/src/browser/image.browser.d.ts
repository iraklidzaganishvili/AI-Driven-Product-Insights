import * as tf from '@tensorflow/tfjs';
import type { Tensor, Tensor3D, Tensor4D } from '@tensorflow/tfjs-core';
import { CheckValidEnvironment, GetImageAsTensor, TensorAsBase64 } from '../shared/types';
export declare const getEnvironmentDisallowsStringInput: () => Error;
export declare const getEnvironmentDisallowsBase64: () => Error;
export declare const getInvalidTensorError: (input: Tensor) => Error;
export declare const getInvalidImageError: () => Error;
export declare const loadImage: (src: string) => Promise<HTMLImageElement>;
export type Input = Tensor3D | Tensor4D | string | tf.FromPixelsInputs['pixels'];
export declare const getImageAsTensor: GetImageAsTensor<typeof tf, Input>;
export declare const isHTMLImageElement: (pixels: Input) => pixels is HTMLImageElement;
export declare const tensorAsBase64: TensorAsBase64<typeof tf>;
export declare const checkValidEnvironment: CheckValidEnvironment<Input>;
//# sourceMappingURL=image.browser.d.ts.map