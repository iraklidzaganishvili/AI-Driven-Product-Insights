"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.getModelDefinitionError = exports.GET_MODEL_CONFIGURATION_MISSING_PATH_AND_INTERNALS = exports.MODEL_CONFIGURATION_MISSING_PATH_AND_INTERNALS_URL = exports.MODEL_INPUT_SIZE_MUST_BE_SQUARE = exports.GET_WARNING_PATCH_SIZE_INDIVISIBLE_BY_DIVISIBILITY_FACTOR = exports.GET_INVALID_PATCH_SIZE_AND_PADDING = exports.GET_INVALID_PATCH_SIZE = exports.GET_INVALID_SHAPED_TENSOR = exports.ERROR_WITH_MODEL_INPUT_SHAPE = exports.WARNING_INPUT_SIZE_AND_PATCH_SIZE = exports.ERROR_MODEL_DEFINITION_BUG = exports.ERROR_INVALID_MODEL_TYPE = exports.AbortError = exports.GET_UNDEFINED_TENSORS_ERROR = exports.ERROR_INVALID_MODEL_PREDICTION = exports.ERROR_INVALID_TENSOR_PREDICTED = exports.WARNING_PROGRESS_WITHOUT_PATCH_SIZE = exports.WARNING_UNDEFINED_PADDING = exports.WARNING_DEPRECATED_MODEL_DEFINITION_FN = void 0;
var types_1 = require("../../../shared/src/types");
var WARNING_DEPRECATED_MODEL_DEFINITION_URL = 'https://upscalerjs.com/documentation/troubleshooting#deprecated-model-definition-function';
exports.WARNING_DEPRECATED_MODEL_DEFINITION_FN = [
    'Passing a model definition as a function is deprecated and will be removed in a future version.',
    'To leverage model lifecycle methods, use the setup and teardown methods.',
    "For more information, see ".concat(WARNING_DEPRECATED_MODEL_DEFINITION_URL, "."),
].join(' ');
var WARNING_UNDEFINED_PADDING_URL = 'https://upscalerjs.com/documentation/troubleshooting#padding-is-undefined';
exports.WARNING_UNDEFINED_PADDING = [
    '"padding" is undefined, but "patchSize" is explicitly defined.',
    'Without padding, patches of images often have visible artifacting at the seams. Defining an explicit padding will resolve the artifacting.',
    "For more information, see ".concat(WARNING_UNDEFINED_PADDING_URL, "."),
    'To hide this warning, pass an explicit padding of "0".',
].join(' ');
var WARNING_PROGRESS_WITHOUT_PATCH_SIZE_URL = 'https://upscalerjs.com/documentation/troubleshooting#progress-specified-without-patch-size';
exports.WARNING_PROGRESS_WITHOUT_PATCH_SIZE = [
    'The "progress" callback was provided but "patchSize" was not defined.',
    'Without a "patchSize", the "progress" callback will never be called.',
    "For more information, see ".concat(WARNING_PROGRESS_WITHOUT_PATCH_SIZE_URL, "."),
].join(' ');
var ERROR_INVALID_TENSOR_PREDICTED_URL = 'https://upscalerjs.com/documentation/troubleshooting#invalid-predicted-tensor';
var ERROR_INVALID_TENSOR_PREDICTED = function (shape) { return [
    "The tensor returned by the model was not a valid rank-4 tensor. It's shape is ".concat(JSON.stringify(shape), ".}"),
    'UpscalerJS only supports models returning valid image-like data in four dimensional form.',
    "For more information, see ".concat(ERROR_INVALID_TENSOR_PREDICTED_URL, "."),
].join(' '); };
exports.ERROR_INVALID_TENSOR_PREDICTED = ERROR_INVALID_TENSOR_PREDICTED;
var ERROR_INVALID_MODEL_PREDICTION_URL = 'https://upscalerjs.com/documentation/troubleshooting#invalid-model-prediction';
exports.ERROR_INVALID_MODEL_PREDICTION = [
    'The model output was not a valid tensor. UpscalerJS only supports models returning valid tensors.',
    'This is likely an error with the model itself, not UpscalerJS.',
    "For more information, see ".concat(ERROR_INVALID_MODEL_PREDICTION_URL, "."),
].join(' ');
exports.GET_UNDEFINED_TENSORS_ERROR = new Error('No defined tensors were passed to concatTensors');
var AbortError = (function (_super) {
    __extends(AbortError, _super);
    function AbortError() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.message = 'The upscale request received an abort signal';
        return _this;
    }
    return AbortError;
}(Error));
exports.AbortError = AbortError;
var ERROR_INVALID_MODEL_TYPE_URL = 'https://upscalerjs.com/documentation/troubleshooting#invalid-model-type';
var WARNING_INPUT_SIZE_AND_PATCH_SIZE_URL = 'https://upscalerjs.com/documentation/troubleshooting#input-size-and-patch-size';
var ERROR_WITH_MODEL_INPUT_SHAPE_URL = 'https://upscalerjs.com/documentation/troubleshooting#error-with-model-input-shape';
var ERROR_INVALID_MODEL_TYPE = function (modelType) { return ([
    "You've provided an invalid model type: ".concat(JSON.stringify(modelType), ". Accepted types are \"layers\" and \"graph\"."),
    "For more information, see ".concat(ERROR_INVALID_MODEL_TYPE_URL, "."),
].join(' ')); };
exports.ERROR_INVALID_MODEL_TYPE = ERROR_INVALID_MODEL_TYPE;
exports.ERROR_MODEL_DEFINITION_BUG = 'There is a bug with the upscaler code. Please report this.';
exports.WARNING_INPUT_SIZE_AND_PATCH_SIZE = [
    'You have provided a patchSize, but the model definition already includes an input size.',
    'Your patchSize will be ignored.',
    "For more information, see ".concat(WARNING_INPUT_SIZE_AND_PATCH_SIZE_URL, "."),
].join(' ');
var ERROR_WITH_MODEL_INPUT_SHAPE = function (inputShape) { return [
    "Expected model to have a rank-4 compatible input shape. Instead got: ".concat(JSON.stringify(inputShape), "."),
    "For more information, see ".concat(ERROR_WITH_MODEL_INPUT_SHAPE_URL, "."),
].join(' '); };
exports.ERROR_WITH_MODEL_INPUT_SHAPE = ERROR_WITH_MODEL_INPUT_SHAPE;
var GET_INVALID_SHAPED_TENSOR = function (shape) { return new Error("Invalid shape provided to getWidthAndHeight, expected tensor of rank 3 or 4: ".concat(JSON.stringify(shape))); };
exports.GET_INVALID_SHAPED_TENSOR = GET_INVALID_SHAPED_TENSOR;
var GET_INVALID_PATCH_SIZE = function (patchSize) { return new Error([
    "Invalid patch size: ".concat(patchSize, ". Patch size must be greater than 0."),
].join(' ')); };
exports.GET_INVALID_PATCH_SIZE = GET_INVALID_PATCH_SIZE;
var GET_INVALID_PATCH_SIZE_AND_PADDING = function (patchSize, padding) { return new Error([
    "Invalid patch size and padding: ".concat(patchSize, " and ").concat(padding, ". Patch size must be greater than padding * 2."),
].join(' ')); };
exports.GET_INVALID_PATCH_SIZE_AND_PADDING = GET_INVALID_PATCH_SIZE_AND_PADDING;
var WARNING_PATCH_SIZE_INDIVISIBLE_BY_DIVISIBILITY_FACTOR_URL = 'https://upscalerjs.com/documentation/troubleshooting#patch-size-indivisible-by-divisibility-factor';
var GET_WARNING_PATCH_SIZE_INDIVISIBLE_BY_DIVISIBILITY_FACTOR = function (patchSize, divisibilityFactor, upscaledPatchSize) { return [
    "Invalid patch size: ".concat(patchSize, ". The model has a defined divibility factor of ").concat(divisibilityFactor, " and patch size must be a multiple of this number."),
    "Patch size has been scaled up to ".concat(upscaledPatchSize, "."),
    "\nFor more information, see ".concat(WARNING_PATCH_SIZE_INDIVISIBLE_BY_DIVISIBILITY_FACTOR_URL, "."),
].join(' '); };
exports.GET_WARNING_PATCH_SIZE_INDIVISIBLE_BY_DIVISIBILITY_FACTOR = GET_WARNING_PATCH_SIZE_INDIVISIBLE_BY_DIVISIBILITY_FACTOR;
exports.MODEL_INPUT_SIZE_MUST_BE_SQUARE = new Error([
    'Model input sizes must be square. If you are using a model with a non-square input size and would like to request support,',
    'please file a feature request at https://github.com/thekevinscott/upscalerjs',
].join(' '));
exports.MODEL_CONFIGURATION_MISSING_PATH_AND_INTERNALS_URL = 'https://upscalerjs.com/documentation/troubleshooting#missing-path-and-internals';
var GET_MODEL_CONFIGURATION_MISSING_PATH_AND_INTERNALS = function (modelConfiguration) { return [
    'Provided model configuration is missing both a "path" and "_internals". A valid path to a model JSON file must be provided.',
    "For more information, see ".concat(exports.MODEL_CONFIGURATION_MISSING_PATH_AND_INTERNALS_URL, "."),
    "The model configuration provided was: ".concat(JSON.stringify(modelConfiguration)),
].join(' '); };
exports.GET_MODEL_CONFIGURATION_MISSING_PATH_AND_INTERNALS = GET_MODEL_CONFIGURATION_MISSING_PATH_AND_INTERNALS;
function getModelDefinitionError(error, modelDefinition) {
    switch (error) {
        case types_1.MODEL_DEFINITION_VALIDATION_CHECK_ERROR_TYPE.INVALID_MODEL_TYPE:
            return new Error((0, exports.ERROR_INVALID_MODEL_TYPE)(modelDefinition === null || modelDefinition === void 0 ? void 0 : modelDefinition.modelType));
        case types_1.MODEL_DEFINITION_VALIDATION_CHECK_ERROR_TYPE.MISSING_PATH:
            return new Error((0, exports.GET_MODEL_CONFIGURATION_MISSING_PATH_AND_INTERNALS)(modelDefinition));
        default:
            return new Error(exports.ERROR_MODEL_DEFINITION_BUG);
    }
}
exports.getModelDefinitionError = getModelDefinitionError;
